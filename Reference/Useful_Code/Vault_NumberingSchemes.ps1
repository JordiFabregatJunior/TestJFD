# Gets next avaialable number for specific numbering scheme
Import-Module PowerVault
Open-VaultConnection -Server "w10-2019-demo" -Vault "DEMO" -user "Administrator"
$entity = Get-VaultFile -File "$/Designs/Testing/100122.ipt"

$fakeFileNameScheme = @(New-Object PsObject -Property @{"Name"="FileName"; "FileNameValue" = "$($entity._PartNumber)"})
Log -Message "> Added fake FileNameNumScheme with props: 'Name'='FileName' and 'FileNameValue'='$($entity._PartNumber)'"
[System.Collections.ArrayList]$numSchems += $fakeFileNameScheme
$numSchems += ($vault.DocumentService.GetNumberingSchemesByType('Activated'))
<#if ($numSchems.Count -gt 1)
{
    $numSchems = $numSchems | Sort-Object -Property IsDflt -Descending
}#>
return $numSchems

$numSchms = $vault.DocumentService.GetNumberingSchemesByType("Activated")
$numSchm = $numSchms | Where-Object { $_.Name -eq "Navision" }
$numSchm = $numSchms | Where-Object { $_.Name -eq "Sequential" }
$vault.DocumentService.GenerateFileNumber($numSchm.SchmID,@(""))

function Get-InstanceNumSchemeTemplate ($numSchm) {
    if(-not($numSchm)){ return }
    $template = ""
    foreach($field in @($numSchm.FieldArray) ){
        $type= $field.FieldTyp
        if($type -eq "Autogenerated"){
            $length = $field.len
            $template += "$('#'*$length)"
        } elseif($type -eq 'FixedText'){
            $template += "$($field.FixedTxtVal)"
        } elseif($type -eq 'Delimiter'){
            $template += "$($field.DelimVal)"
        }
    }
    return $template
}

foreach($numSchm in $numSchms){
    Get-InstanceNumSchemeTemplate -numSchm $numSchm
}